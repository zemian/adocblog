<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.zemian</groupId>
	<artifactId>adocblog</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<build>
		<finalName>adocblog</finalName>

		<plugins>
			<!-- The 2.3.2 release plugin has a bug that can not find mvn.bat for 3.5.0 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
			</plugin>

			<!-- We want our classes to be package as jar inside WEB-INF/lib -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<archiveClasses>true</archiveClasses>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<scm>
		<developerConnection>scm:git:file:</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>5.0.1.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.11</version>
		</dependency>

		<!-- Apache Commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.5</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>

        <!-- Web SpringMVC -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

		<!-- Web View: FTL Template Engine -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.27-incubating</version>
		</dependency>
		<dependency>
			<groupId>no.api.freemarker</groupId>
			<artifactId>freemarker-java8</artifactId>
			<version>1.1.5</version>
		</dependency>

		<!-- Webjars -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>3.3.7-1</version>
		</dependency>

		<!-- DB -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.1.4</version>
		</dependency>

		<!-- Asciidoc
		NOTE: Asciidoc 1.5.6 has older dependency on jruby that cause problems with JDK. So we
		need to use latest.
		-->
		<dependency>
			<groupId>org.jruby</groupId>
			<artifactId>jruby-complete</artifactId>
			<version>9.1.14.0</version>
		</dependency>
		<dependency>
			<groupId>org.asciidoctor</groupId>
			<artifactId>asciidoctorj</artifactId>
			<version>1.5.6</version>
		</dependency>

		<!-- JSON/API -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.0</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
            <scope>test</scope>
        </dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>package-zip</id>
			<build>
				<!-- Move apps.properties files into a config directory
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<excludes>
							<exclude>adocblog/app*.properties</exclude>
						</excludes>
					</resource>
				</resources> -->

				<plugins>
					<!-- Create a skinny war, exclude all jars except our own app code
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>3.2.0</version>
						<configuration>
							<packagingExcludes>
								%regex[WEB-INF/lib/(?!adocblog).*.jar]
							</packagingExcludes>
						</configuration>
					</plugin>
					-->

					<!-- Include webapp-runner during packaging -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.3</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals><goal>copy</goal></goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>com.github.jsimone</groupId>
											<artifactId>webapp-runner</artifactId>
											<version>8.5.23.0</version>
											<destFileName>webapp-runner.jar</destFileName>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
